generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model dia {
  id             String       @id @unique
  receberDadosId String       @unique
  entradaManha   String
  saidaManha     String
  entradaTarde   String?
  saidaTarde     String?
  entradaExtra   String?
  saidaExtra     String?
  dif_min        Int
  saldoAtual     Int?
  dataInicio     DateTime     @default(now()) // Definindo o campo dataInicio como opcional e preenchido automaticamente
  receberdados   receberdados @relation(fields: [receberDadosId], references: [id])
}

model receberdados {
  id            String   @id @unique
  mes           String
  data          DateTime
  diaSemana     String
  status        String
  nome          String
  matricula     String
  setor         String
  expediente    String
  saldoanterior Int
  dia           dia?
}

model funcionario {
  id             Int       @id @unique @default(autoincrement())
  filial         String
  identificacao  String    @unique
  nome           String
  turnoId        Int
  centroCustoId  Int
  funcaoId       Int
  localidadeId   String
  dataNascimento DateTime
  dataAdmissao   DateTime
  dataDemissao   DateTime?

  turno        turno        @relation(fields: [turnoId], references: [id], onDelete: Cascade)
  centro_custo centro_custo @relation(fields: [centroCustoId], references: [id], onDelete: Cascade)
  funcao       funcao       @relation(fields: [funcaoId], references: [id], onDelete: Cascade)
  endereco     endereco?
  contatos     contato[]
  emails       email[]
  cartao       cartao[]

  localidade localidade @relation(fields: [localidadeId], references: [codigo])
}

model localidade {
  codigo       String        @id @unique
  nome         String
  funcionarios funcionario[]
}

model turno {
  id           Int           @id @unique @default(autoincrement())
  nome         String        @unique
  funcionarios funcionario[]
}

model centro_custo {
  id           Int           @id @unique @default(autoincrement())
  nome         String        @unique
  funcionarios funcionario[]
}

model funcao {
  id           Int           @id @unique @default(autoincrement())
  nome         String        @unique
  funcionarios funcionario[]
}

model endereco {
  id          Int    @id @default(autoincrement())
  rua         String
  numero      String
  complemento String
  bairro      String
  cidade      String
  estado      String
  cep         String

  funcionarioId Int         @unique
  funcionario   funcionario @relation(fields: [funcionarioId], references: [id], onDelete: Cascade)
}

model contato {
  id            Int          @id @unique @default(autoincrement())
  numero        String       @unique
  funcionarioId Int?
  funcionario   funcionario? @relation(fields: [funcionarioId], references: [id], onDelete: Cascade)
}

model email {
  id            Int          @id @unique @default(autoincrement())
  nome          String       @unique
  funcionarioId Int?
  funcionario   funcionario? @relation(fields: [funcionarioId], references: [id], onDelete: Cascade)
}

model cartao {
  id               Int      @id @default(autoincrement())
  funcionarioId    Int
  referencia       DateTime
  saldoAnterior60  Int
  saldoAnterior100 Int
  statusId         Int

  funcionario   funcionario    @relation(fields: [funcionarioId], references: [id], onDelete: Cascade)
  cartao_dia    cartao_dia[]
  cartao_status cartao_status? @relation(fields: [statusId], references: [id], onDelete: Cascade)

  @@unique([funcionarioId, referencia])
}

model cartao_status {
  id   Int    @id @default(autoincrement())
  nome String @unique

  cartao cartao[]
}

model cartao_dia {
  id                      Int                     @id @default(autoincrement())
  data                    DateTime
  statusId                Int
  cartaoId                Int
  periodoDescanso         Int
  cargaHor                Int
  cargaHorPrimeiroPeriodo Int
  cargaHorSegundoPeriodo  Int
  cargaHorariaCompleta    String
  cargaHorariaNoturna     Int                     @default(0)
  cartao_dia_status       cartao_dia_status       @relation(fields: [statusId], references: [id], onDelete: Cascade)
  cartao                  cartao                  @relation(fields: [cartaoId], references: [id], onDelete: Cascade)
  cartao_dia_lancamentos  cartao_dia_lancamento[]

  @@unique([cartaoId, data])
}

model cartao_dia_status {
  id          Int          @id
  nome        String
  cartao_dias cartao_dia[]
}

model cartao_dia_lancamento {
  id            Int      @id @default(autoincrement())
  periodoId     Int
  entrada       DateTime
  saida         DateTime
  statusId      Int
  cartao_dia_id Int

  cartao_dia_lancamento_periodo cartao_dia_lancamento_periodo @relation(fields: [periodoId], references: [id], onDelete: Cascade)
  cartao_dia                    cartao_dia                    @relation(fields: [cartao_dia_id], references: [id])
}

model cartao_dia_lancamento_periodo {
  id                     Int                     @id @default(autoincrement())
  nome                   String                  @unique
  cartao_dia_lancamentos cartao_dia_lancamento[]
}
